generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

enum UserDocumentType {
  br_cpf
  passport
}

enum UserGender {
  male
  female
  other
}

enum EventType {
  online
  in_person
  hybrid
}

enum EventStatus {
  draft
  private
  published
}

enum EventVisibility {
  public
  private
}

model User {
  id    String @id
  email String @unique

  full_name     String
  phone         String
  document_type UserDocumentType
  document      String
  birth_date    DateTime?
  gender        UserGender?

  events Event[]

  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  @@map("users")
}

model Category {
  id          String @id
  slug        String @unique
  title       String
  description String

  banner_url    String?
  thumbnail_url String?

  events Event[]

  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  @@map("categories")
}

model Event {
  id       String @id
  slug     String @unique
  title    String
  owner    User   @relation(fields: [owner_id], references: [id])
  owner_id String

  type       EventType
  status     EventStatus
  visibility EventVisibility

  service_fee Float   @default(10)
  absorve_fee Boolean @default(false)

  description   String?
  category      Category? @relation(fields: [category_id], references: [id])
  category_id   String?
  banner_url    String?
  thumbnail_url String?
  opengraph_url String?

  age_restriction Int?

  start_date      DateTime
  end_date        DateTime
  sales_starts_at DateTime
  sales_ends_at   DateTime

  address_name     String?
  address_zip_code String?
  address_country  String?
  address_region   String?
  address_city     String?
  address_line     String?
  gmaps_url        String?

  facebook_url  String?
  instagram_url String?
  twitter_url   String?
  tiktok_url    String?
  site_url      String?

  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  @@map("events")
}
